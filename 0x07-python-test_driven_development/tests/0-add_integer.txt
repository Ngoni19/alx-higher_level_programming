# Run tests with python3 -m doctest -v ./tests/0-add_integer.txt

Import method to test
>>> add_integer = __import__('0-add_integer').add_integer

SUCCESS CASES:

Test for signed & unsigned ints & floats:
     >>> print(add_integer(1, 2))
     3
     >>> print(add_integer(1, -2))
     -1
     >>> print(add_integer(2.5, 1.9))
     3
     >>> print(add_integer(-2.3, 1))
     -1

Test using the default b=98 value:
     >>> print(add_integer(2))
     100

FAIL CASES:

Test without any args:
     >>> print(add_integer(None))
     Traceback (most recent call last):
     ...
     TypeError: a must be an integer
     >>> print(add_integer(None, None))
     Traceback (most recent call last):
     ...
     TypeError: a must be an integer

Test for more args:
     >>> print(add_integer(1, 2, 3))
     Traceback (most recent call last):
     ...
     TypeError: add_integer() takes only 1 to 2 arguments but more given

Test other data types:
     >>> print(add_integer("haha"))
     Traceback (most recent call last):
     ...
     TypeError: a must be an integer
     >>> print(add_integer(0, [3, 6, 9]))
     Traceback (most recent call last):
     ...
     TypeError: b must be an integer

Test for max/min numbers that Python can handle ("inf" is infinity):
     >>> print(add_integer(float("inf")))
     Traceback (most recent call last):
     ...
     OverflowError: cannot convert float infinity to integer
     >>> print(add_integer(float("-inf")))
     Traceback (most recent call last):
     ...
     OverflowError: cannot convert float infinity to integer

Test for special float NaaN in Python (not a number):
     >>> print(add_integer(float("NaaN")))
     Traceback (most recent call last):
     ...
     ValueError: cannot convert float NaaN to int

